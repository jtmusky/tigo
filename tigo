#!/bin/bash
: << 'EndComments'

Author:		Justin Musgrove
NAME:		tigo
Purpose:	Wrapper script using dialog to open and close git repos with tig

LICNESE:	GPL 3
   tiGO is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   tiGO is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with tiGO; if not, write to the Free Software
   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

EndComments

prereq_vars() { # Sanity checks and program
	
	vars_setup() { # Setup sane default vars
		# Setup 
		readonly ME=${0##*/}

		# Discover where we are where we ran from and source our extras
		BASEDIR="$(dirname "$(readlink -f "$0" )")"

		# Read in all the function libraries
		for script in $BASEDIR/share/[a-z]*.sh ; do
		    . $script
		done

	} 

	prereq() {	# Check for and setup binaries required to run

		# Required binaries to run
		local tigo_bins=( dialog tig git curl tput )

		# Setup temp vars
		local itishere=0 ainthere=0 tigo_bins_path
		declare -gA tb 	# Associative Array for the binaries and set as global
						# Using declare in a function is defaulted to local

		# Loop though required binaries and set then to tb
		printf "$ME: %s\n" "CHECKING FOR REQUIRED BINARIES"
		for check in "${tigo_bins[@]}"; do
			printf "$ME: %8s: " "$check"
			tigo_bins_path=$(which "$check" 2> /dev/null)
			if [[ -n "$tigo_bins_path" ]]; then
				printf "%s %s\n" "GOOD" "$tigo_bins_path"

				# Assign key=value to the associative array, if present
				tb+=(["$check"]="$tigo_bins_path")
				(( itishere++ ))
			else
				printf "%s\n" "Missing"
				(( ainthere++ ))
			fi
		done

		# Present the results of the req binary test
		if [[ "${#tigo_bins[@]}" -eq "$itishere" ]]; then
			printf "$ME: All binaries available\n"
		else
			printf "$ME: Binaries missing: %s\n" "$ainthere"
			exit 1
		fi

	}

	# Setup default vars and check for binaries
	vars_setup
	prereq

}

prereq_vars								# Pre setup for the script
